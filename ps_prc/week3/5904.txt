문제: Moo 게임
메모리 제한: 128MB
시간 제한: 1초

접근 1:
- 안 될 거 같았지만, 그래도 한 번 단순 문자열로 저장해서 해 봄
  - 문제를 푸는 방식 자체는 어렵지 않은데,
    - 이를 쉽게 풀려고 하면 메모리 제한이 나올 수밖에 없는 게 메모리 제한은 128MB
    인데, 최대 데이터 개수는 10억이고,
    문자니까 만약 이를 모두 저장해서 사용한다고 하면 10억B가 나옴
    근데 128MB는 134,217,728B임

의문점:
- 어떻게 메모리를 덜 사용할까?

접근 2: (풀이를 조금 참고 함)
- 어떻게 해야 메모리 공간을 덜 사용할 수 있을 지 봤더니, 분할방식을 사용해서 왼쪽 중간 오른쪽으로 문자열을 나눈다고 함
  - 구현: 그래서 N(길이)에 따라서 문자열 생성한 뒤 그 N의 범위에 따라 왼쪽 중간 오른쪽 중 하나에 접근해서 인덱스 찾음
    - 결과: 메모리 초과
    - 원인: 어쨌든 데이터 개수는 최악의 경우 10억이 되는 건 똑같음 (시간복잡도가 좋아진 거지, 공간복잡도는 같은듯)

접근 3: (풀이 봄)
  - 구현: 재귀적으로 접근하되, 배열을 따로 생성하지 않고, 길이로 재귀하여 가운데부분만 상황에 따라 m과 o 중 출력
    - 길이로 재귀를 돌리면 차수를 올리면서 사용할 수 있는데, 차수를 depth라고 했을 때, depth+3이 가운데의 길이가 됨 (moo+depth)라고 봐도 됨
    N의 길이로 앞, 가운데, 뒤 중 어느 곳에 해당되는지 봄
      - 앞(이전 패턴)은 볼 필요 없음, 해당 차수에 왔다는 것은 이전 패턴에서 막혔기 때문에 온것이라 당연히 N은 이전 패턴의 길이보다 큼
      그래서, 가운데와 뒤에만 보면 되는데
        가운데:
         N에서 앞부분을 뺐을 때 1이면 m, 아니면 o를 출력
        뒤:
          N에서 가운데까지의 길이를 뺀 값을 차수1과 함께 다시 재귀로 돌림
            -> 왜냐면 뒷부분은 앞부분이랑 똑같기 때문에 이로써 앞부분을 새로운 길이로 다시 반복하는 것임
