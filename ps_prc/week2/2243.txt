문제: 사탕상자 (2243)

결론: 사탕을 1, 2에따라 넣고 빼는 프로그램

포인트:
- 말을 잘 들을수록 낮은 숫자
- 1일 때는 순서, 2일 때는 맛
- 2일 때 양수면 넣기, 음수면 빼기
    - 1~2, 1~1000000, 1~20억
- 최대 10만줄

접근1. dict로 사탕별 count를 저장해서 n번째 구하기
    명령어 2가 나올 때마다 사탕별로 count를 저장
    명령어 1이 나올 때마다 dictionary (해쉬테이블)에 순서대로 접근하면서 n(지정한 순위)에서 dictionary의 value만큼 빼줌.
        value만큼 빼서 n이 0보다 작거나 같으면 그 key의 위치가 바로 n번째에 해당하는 것이라, key를 출력한 뒤 해당 key의 value값을 하나 내림으로써 사탕 하나 없앰

6
2 1 2
2 3 3
1 2
1 2
2 1 -1
1 2

입력:
1 1 3 3 3
1 3 3 3
1 3 3
3 3
3

출력:
1 3 3

1) 명령어 2일 경우 -> {1: 2, 3: 3}
2) 명령어 1일 경우 -> {1: 2, 3: 3} 을 루프로 돌아서, 순서대로 n에서 value만큼 빼줌 (즉, n이 4면 2를 빼고 3을 빼고...)
    -> n이 0보다 작거나 같아질 경우 (n이 4면 여기서는 3) 출력한 뒤 딕셔너리는 {1: 2, 3: 2}가 됨



    - 예상: count를 저장하면 최악의 경우에도 10만개의 데이터만 저장하면 될거라 생각해서 이런 방식을 사용
        - 하지만 결국 for문 브루트포스로 계산을 하기 때문인건지..
    - 결과: 시간 초과

접근2. 단순 배열에 저장하려니, 최악의 경우 20억개의 데이터를 저장해야 될거라 다른 방식을 고려

결과: 실패