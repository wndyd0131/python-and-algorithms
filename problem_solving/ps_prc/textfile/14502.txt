14502: 연구소

사용한 알고리즘: dfs -> bfs
	- 이유: 바이러스가 2라는 특정 조건에서 시작해서 0이 더이상 나오지 않을 때까지 2로 채우는 것이기 때문에 dfs가 맞을 거라고 생각해서 dfs를 사용
		- 브루트포스하면서 dfs 사용 시 시간초과 발생 가능성이 꽤 높다고 함, 즉 깊이가 깊어질수록 성능에 좋지 않음
			- 그래서 보니까 bfs를 사용하더라해서, bfs로 교체
			

1) 0은 empty, 1은 wall, 2는 virus
2) 그래프에 대해서 0, 0부터 n-1, n-1까지 루프를 돌려 dfs를 사용
3) dfs일 경우 스택형식으로 다음 방향에 관해 dfs를 콜하기 때문에, 현재 루프의 숫자가 2일 때 + 다음 방향이 0인 경우 2로 바꾸는 식으로 진행
4) 2가 더이상 존재하지 않을 경우 dfs가 끝남
5) 루프가 지속되다가 2를 또 만나면 dfs를 돌림
6) 해당 과정을 매 반복문마다 맵을 복사해서 브루트포스를 통해 배치한 매 1, 1, 1 (i, j, k)의 경우마다 count를 셈
7) 0이 가장 많이 나오는 경우를 max에 대입

문제: 값이 다름 or 런타임 에러
	- 방식이 틀린 거 같진 않은데 잘못 구현했는지 이상한 값 나오고 런타임에러가 뜬다
	- 2차원 배열에 대해 3개 이상의 값을 배치하는 방법이 잘 생각이 안나서 코드좀 참고했음
	- 우선 visit 그래프를 따로 만들지 않아서 2가 이미 채워진 후에도 2로 dfs를 돌렸을 것이라 성능문제도 있는 듯


- dfs방식을 bfs방식으로 바꿈, 즉 2에 해당하는 인덱스를 모두 큐에 집어넣어서 하나씩 pop시킨 후 pop한 인덱스에 대한 다음 방향을 또 다시 큐에 집어 넣는 방식을 사용
		- 근데도 틀렸습니다..
